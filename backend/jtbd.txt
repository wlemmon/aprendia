
Jobs to be Done (user stories)

1. Create a new, unique story different from previously created stories that will stretch the user’s grammar and/or vocabulary acquired so far. It could be interesting and span multiple chapters. It should be grounded in real-life scenarios. (1) A User clicks create new story. The story creation dialogue appears and allows the user to select story options. language level options: A1, A2, B1, B2. speaker age level options: toddler, pre-school, middle school, high school, college. topic options: travel, parenting. story conversation type option: internal dialogue, narration for observer’s language acquisition, story told from 3rd person omniscient narrator, or dialogue between two people. min sentence length: 3-7. max sentence length: 5-20. hidden field: story type option: new story, retell chapter with new language settings, next chapter as a continuation of an existing story. hidden field: source locale (language). hidden field: target locale (language). (2) The system prompts gemini to create the chapter 1 of a new story given the constraints. separate each sentence of the story to a separate line. each line of the story should include (a) the source language and (b) the target language translation of that sentence, separated by a pipe character. The story chapter is returned and stored in the database along with metadata about target vocabulary and grammar. the story chapter is parsed into sentence pairs. each sentence pair then has a locale-specific tts audio file generated for it, which is saved under data/audio/locale/<sentence_locale_text_hash.mp3> using gemini tts. The final stored quadruple (source sentence text, target sentence text, source audio file name, target audio file name) represents elements of a flashcard that will be used for language learning. (3) During chapter creation, the user is shown a status that the chapter is being created. (4) after chapter creation, the user is shown a UI element to click to enter studying the chapter. (5) after clicking, the user is taken to an anki-style flashcard deck of the sentences in the chapter. cards are shown one at a time and in the same order as they appear in the story. The front of the card has (a) the target language text (hidden by default with a show text button) and (b) a symbol to play the audio (audio plays automatically and can be replayed by clicking the symbol). the user can flip the flashcard by clicking the “back” link on the bottom of the card. the back of the flash card shows the source language text, has a symbol to play the source audio, and plays the source audio automatically. at the bottom of the back of the card are four buttons: again, hard, good, and easy (similar to anki spaced repetition). for now, all the buttons do the next thing: they put the card at the back of the deck and advance the UI to the next flashcard in the chapter.

2. Generate a quiz from an existing story chapter and its associated sentences and metadata. (1) the user clicks create quiz for the current chapter. (2) the backend system calls gemini to create the quiz. prompt gemini to create 5 open-ended cloze-style fill-in-the-blank prompts to exercise the listeners ability to recall new vocabulary or grammar introduced in that chapter. For example, if the sentence was “lets put the drawing on the refrigerator,” the quiz question might be “lets put the drawing on the what?” and the answer would be “the refrigerator.” both the question and the answer should be conversational. both the question and the answer should be in the target language only and should closely mirror a sentence to make it easier for the language learner to understand what is being tested. another example: given the sentence “‘I’m a little busy today.’ John said.” if assessing the learner’s acquisition of past-tense “said” the question might be “‘I’m a little busy today.’ John <BLANK>.” and the answer would be “John SAID.” Use gemini to create the questions along with the associated answers. Then use tts to convert those question answer pairs to audio, and save them in data/audio/locale/<sentence_locale_text_hash.mp3>. save the quiz to the database, along with the associated quadruples (question, answer, question audio, answer audio). internally the quiz will be presented to the user in the same format as a study deck: flashcards (3) once processing is completed, present a UI element to the user to start the quiz. (4) upon entering the quiz, the quiz questions are presented to the user one at a time using the same UI for studying flashcards. each question has a front and back. audio is played automatically.

3. From within a story, the user can create a next chapter. The next chapter creation dialogue is exactly the same as the new story (first chapter) dialogue, except the context passed into gemini is a bit different. Instead of prompting it to be different from previous stories, prompt it to be a continuation of the current story. for context provide the current story. all other chapter creation options are still present (language level, etc.)

4. UI organization.The user’s created stories are organized in a panel on the left for easy navigation. Upon clicking on a story, the story display page shows all created chapters for studying in a horizontal row. in a second horizontal row are all quizzes created for the above chapters. under each chapter is a button for created a quiz for that chapter. upon entering a chapter or quiz, the study flashcard deck ui opens with that chapter or quizzes flashcards. (left story navigation bar, main: story chapter navigation / quiz creation panel. main: replaced with deck study UI after clicking a chapter or quiz.)

